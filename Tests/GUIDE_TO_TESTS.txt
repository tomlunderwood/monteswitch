*************************************************************************************************************

Guide to 'monteswitch' tests

*************************************************************************************************************

In this directory are a suite of tests for monteswitch. Of course, these tests can also be used as examples.

Each test can be executed by executing the run.sh shell script in the corresponding directory after copying the
appropriate 'interactions.f95' to the 'interactions.f95' in the source code directory, and then compiling the
source code. Note that the 'run.sh' scripts assume that the monteswitch executables are located next to the 
source code in the above directory - which should be the case by default. 






*************************************************************************************************************
The Einstein crystal (EC)

The Einstein crystal is an excellent testing ground because analytical results can be obtained for this system:
in what follows we use those for the free energy and mean-squared displacement given in Section 10.2.1 in the 
book 'Understanding Molecular Simulation: From Algorithms to Applications' by Frenkel and Smit.

The following tests test the executables 'monteswitch' and 'monteswitch_mpi' against the Einstein
crystal in the NVT ensemble. Tests include multicanonical sampling and weight function generation (including
mobile barrier methods), calculation of free energy differences, and calculation of equilibrium properties.

The relevant 'interactions.f95' file for these tests can be found in this directory, and is named 
'interactions_EC.f95'. Before running these tests one should replace the 'interactions.f95' file in the
source code for monteswitch with 'interactions_EC.f95' - though renamed to be 'interactions.f95' - and then
(re)complile the source code.


*****************************
test_EC_1

This test calculates the free energy difference between two Einstein crystals with different spring constants,
as well as the mean-squared displacements and mean energies of both crystals. The spring constant for lattice 
1 is alpha_1=1.0; and the spring constant for lattice 2 is alpha_2=2.0. The calculation in this test is 
performed at beta=100 using Boltzmann sampling, for a one particle supercell, and consists of 10,000,000
sweeps using 'part_step=0.12'.

Checks to perform:
1) The free energy difference per particle between the two systems should be (3/200)*ln(1/2)=-0.0103972. 
   Check that this is the case for the simulation: the free energy difference is stored in the 'equil_DeltaF' 
   variable output to the terminal, with its uncertainty stored in the 'sigma_equil_DeltaF' variable. 
2) The mean-squared displacements should be 3/200=0.015 for lattice 1 and 3/400=0.0075 for lattice 2: see the 
   variables 'equil_umsd_1', 'sigma_equil_umsd_1', 'equil_umsd_2' and 'sigma_equil_umsd_2' output to the 
   terminal.
3) The mean energy of both crystals should be 0.015, which follows from the equipartition theorem:
   there are 3 degrees of freedom, each with 0.5/beta, which in our case gives 1.5/100. Check that this
   is the case by examining the variables 'equil_H_1', 'sigma_equil_H_1', 'equil_H_2' and 'sigma_equil_H_2'
   in the output to the terminal. Note that 'H' in monteswitch refers to the energy in an NVT simulation, and 
   the enthalpy in an NPT simulation.   

*****************************

test_EC_1_MPI

This test is the same as test_EC_1, except that an MPI simulation is run using 4 threads. One should check that
1), 2) and 3) described in test_EC_1 applies to the variables listed in the 'state' file as opposed to the
terminal. This test essentially verifies that monteswitch_mpi works correctly, especially that it correctly pools 
the results from many threads and outputs them to the 'state' file.

*****************************

test_EC_2

This test is the same as test_EC_1, except that 10 simulations consisting of 1,000,000 sweeps each are performed
instead of one simulation of 10,000,000 sweeps, using both the -resume and -new arguments to the executable 
'monteswitch' instead of simply the -new argument. This test essentially verifies that checkpointing works
correctly. Checks 1), 2) and 3) described in test_EC_1 should be performed on the 'state' file.

*****************************

test_EC_2_MPI

This test is the same as test_EC_2, except that 10 4-thread MPI simulations are performed. This test essentially verifies 
that checkpointing works correctly for monteswitch_mpi. Checks 1), 2) and 3) described in test_EC_1 should be 
performed on the 'state' file.

*****************************

test_EC_3

This test calculates the equilibrium quantities as described in test_EC_1, but uses multicanonical sampling,
with a weight function generated using the visited states method. Specifically, a weight function generation 
simulation is performed which consists of 10,000,000 sweeps. Then the 'state' file is altered in preparation 
for the production simulation. Then the production simulation is performed, which consists of 10,000,000 sweeps.

This test also outputs the weight function generated using the visited states method, as well as a histogram of 
the macrostates visited during the production simulation. These can be found in the files 'wf.dat' and 'M_hist.dat'
respectively. 

Checks to perform (beyond  1), 2) and 3) described in test_EC_1):
4) The macrostate histogram should be fairly flat - which reflects the fact that all macrostates are
   visted with equal probability in multicanonical sampling using an ideal weight function. 
5) In the limit of small macrostates, the ideal weight function should have the form 
   eta(M)=C-beta*M-ln(-M*(1+exp(beta*M))), with beta=100 here, and C is some constant. One should check that
   the weight function in 'wf.dat' looks similar to this: graphing both quantities, one should see two parallel
   lines with small 'upward hooks' near M=0, where near M=0 the lines may become less parallel.

*****************************

test_EC_4

This test calculates the equilibrium quantities as described in test_EC_1, but uses multicanonical sampling,
with a weight function generated using the shooting method. Specifically, a weight function generation simulation
is performed which consists of 1,000,000 sweeps. Then the 'state' file is altered in preparation 
for the production simulation. Then the production simulation is performed, which consists of 10,000,000 sweeps.
The checks to perform for this test are the same as for test_EC_3.


*****************************

test_EC_4_MPI

This test is the same as test_EC_4, but uses MPI (2 threads).


*****************************

test_EC_5

This test generates the weight function using the shooting method in conjunction with 'pong_down' barrier
dynamics and Boltzmann sampling. The simulation consists of 1,000,000 sweeps. The weight function can be 
found in 'wf.dat', and should be the same as described in 5) in test_EC_3. Two further files are created 
during this test: 'M_vs_t.dat' gives the value of M vs. sweep number (data points every 100 sweeps), and 
'macro_vs_t.dat' similarly gives the macrostate number, i.e., the bin in the order parameter histogram 
for the system, vs. sweep number. Both plots should resemble a sawtooth.


*****************************

test_EC_5_MPI

This test is similar to test_EC_5, except that a 2-thread MPI simulation is performed, and 'pong_up'
barrier dynamics are used. The files 'M_vs_t_0.dat' and 'macro_vs_t_0.dat' pertain to thread '0'; and
the files 'M_vs_t_1.dat' and 'macro_vs_t_1.dat' pertain to thread 1. All files should have a sawtooth
pattern. Again, 'wf.dat' should be the same as described in 5) in test_EC_3.


*****************************

test_EC_6

This test is similar to test_EC_5, except that 'random' barrier dynamics are used. The files 'M_vs_t.dat'
and 'macro_vs_t.dat' should be random walks. 'wf.dat' should be the same as described in 5) in 
test_EC_3.


*****************************

test_EC_7

This test is the same as test_EC_5, except that 10 simulations are performed (each consisting of 100,000
sweeps) instead of 1. This tests continuity of simulations using barriers over checkpoints. 'wf.dat' 
should be the same as described in 5) in test_EC_3.


*****************************

test_EC_7_MPI

This test is similar to test_EC_7, except that 2 2-thread MPI simulations are performed such that the total
number of sweeps is 1,000,000. 'wf.dat' should be the same as described in 5) in test_EC_3.


*****************************

test_EC_8

This test is similar to test_EC_1, except that the crystal consists of 4 particles.
Checks to perform:
1) The free energy difference per particle between the two systems should be -0.0415888
   Check that this is the case for the simulation: the free energy difference is stored in the 'equil_DeltaF' 
   variable output to the terminal, with its uncertainty stored in the 'sigma_equil_DeltaF' variable. 
2) The mean-squared displacements should be 3/200=0.015 for lattice 1 and 3/400=0.0075 for lattice 2: see the 
   variables 'equil_umsd_1', 'sigma_equil_umsd_1', 'equil_umsd_2' and 'sigma_equil_umsd_2' output to the 
   terminal.
3) The mean energy of both crystals should be 0.06, which follows from the equipartition theorem:
   there are 4*3 degrees of freedom , each with 0.5/beta, which in our case gives 6/100. Check that this
   is the case by examining the variables 'equil_H_1', 'sigma_equil_H_1', 'equil_H_2' and 'sigma_equil_H_2'
   in the output to the terminal. Note that 'H' in monteswitch refers to the energy in an NVT simulation, and 
   the enthalpy in an NPT simulation.  

*****************************

test_EC_8_MPI

This test is the same as test_EC_8, except that an MPI simulation is run using 4 threads.  One should check that
1), 2) and 3) described in test_EC_8 applies to the variables listed in the 'state' file as opposed to the
terminal. This test essentially verifies that monteswitch_mpi works correctly, especially that it correctly pools 
the results from many threads and outputs them to the 'state' file.

*****************************

test_EC_9

This test is the same as test_EC_8, except that 10 simulations consisting of 1,000,000 sweeps each are performed
instead of one simulation of 10,000,000 sweeps, using both the -resume and -new arguments to the executable 
'monteswitch' instead of simply the -new argument. This test essentially verifies that checkpointing works
correctly. Checks 1), 2) and 3) described in test_EC_8 should be performed on the 'state' file.

*****************************

test_EC_9_MPI

This test is the same as test_EC_9, except that 10 4-thread MPI simulations are performed. This test essentially verifies 
that checkpointing works correctly for monteswitch_mpi. Checks 1), 2) and 3) described in test_EC_8 should be 
performed on the 'state' file.






*************************************************************************************************************
NPT Einstein crystal tests (EC_NPT)

The Einstein crystal cannot be used for NPT simulations. Here we consider a modification of the Einstein
crystal model in which the spring constants have a volume dependence. The relevant file is named 'interactions_EC_NPT.f95'.
For 'lattice' 1 the energy of a particle is given by $E=alpha_1 V^{-gamma_1} u^2$, where u is the displacement, 
and alpha_1 and gamma_1 determing the volume dependence of the interactions. Analytical results can be derived for 
this model in the NPT ensemble:

The partition function for lattice 1 is (where $\Gamma$ denotes the gamma function):
$Z_1=\frac{2^{5/2}\pi\Gamma(1.5)}{(\alpha_1\beta)^{3/2}}\frac{\Gamma(1.5\gamma_1+1)}{(\beta P)^{1.5\gamma_1+1}$.
The mean-squared displacements are:
$\langle u^2\rangle_1$=\frac{1}{\beta\alpha_1(\beta P)^{\gamma_1}}\frac{\Gamma(2.5)\Gamma(2.5\gamma_1+1)}{\Gamma(1.5)\Gamma(1.5\gamma_1+1}
The mean volume is:
$<V>=\frac{\Gamma(1.5\gamma_1+2)}{\Gamma(1.5\gamma_1+1)}\frac{1}{\beta P}
Similar applies for lattice 2.

Using the expression for the partition function, one can derive an expression for the free energy difference
between the two lattices:
$F_1-F_2=-\frac{1}{\beta}\ln\lbrace \frac{\Gamma(1.5\gamma_1+1)}{\Gamma(1.5\gamma_2+1)}\frac{\alpha_2}{\alpha_1}^{3/2}(\beta P)^{1.5(\gamma_2-\gamma_1)}\rbrace

The following tests test the executables 'monteswitch' and 'monteswitch_mpi' against the above model in the
NPT ensemble. Tests include multicanonical sampling and weight function generation (including
mobile barrier methods), calculation of free energy differences, and calculation of equilibrium properties.

The relevant 'interactions.f95' file for these tests can be found in this directory, and is named 
'interactions_EC_NPT.f95'. Before running these tests one should replace the 'interactions.f95' file in the
source code for monteswitch with 'interactions_EC_NPT.f95' - though renamed to be 'interactions.f95' - and then
(re)complile the source code.

*****************************
test_EC_1_NPT

This test calculates the free energy difference between two 'lattices' with different 'alpha' and 'gamma',
as well as the mean-squared displacements and mean energies of both crystals. Here alpha_1=1000, gamma_1=2,
alpha_2=2000, gamma_2=1.8, beta=10, P=0.25. The calculation in this test is performed using Boltzmann 
sampling, for a one particle supercell, and consists of 10,000,000 sweeps using 'part_step= 0.03' and
'vol_step= 3.0'

Checks to perform:
1) The mean-squared displacements should be 0.00048 for lattice 1 and 0.00018089 for lattice 2: see the 
   variables 'equil_umsd_1', 'sigma_equil_umsd_1', 'equil_umsd_2' and 'sigma_equil_umsd_2' output to the 
   terminal.
2) The mean volume should be 1.6 for lattice 1 and 1.48 for lattice 2: see the variables 'equil_V_1', 
   'sigma_equil_V_1', 'equil_V_2' and 'sigma_equil_V_2' output to the terminal.
3) The mean enthalphy should be 0.55 for lattice 1 and 0.52 for lattice 2. This follows from the fact that
   the mean enthalpy is the mean energy + PV, where the mean energy of both crystals should be 0.15, which 
   follows from the equipartition theorem: there are 3 degrees of freedom, each with 0.5/beta.
   See the variables 'equil_H_1', 'sigma_equil_H_1', 'equil_H_2' and 'sigma_equil_H_2' output to the terminal.
   Note that 'H' in monteswitch refers to the energy in an NVT simulation, and the enthalpy in an NPT simulation.   
4) The free energy difference per particle between the two systems should be -0.11285. See the variables
   'equil_DeltaF' and 'sigma_equil_DeltaF' output to the terminal.


*****************************

test_EC_NPT_2

This test is the same as test_EC_NPT_1, except that 10 simulations consisting of 1,000,000 sweeps each are performed
instead of one simulation of 10,000,000 sweeps, using both the -resume and -new arguments to the executable 
'monteswitch' instead of simply the -new argument. This test essentially verifies that checkpointing works
correctly. Checks 1), 2) and 3) described in test_EC_1 should be performed on the 'state' file.


*****************************

test_EC_NPT_2_MPI

This test is the same as test_EC_NPT_2, except that 10 4-thread MPI simulations are performed. This test essentially verifies 
that checkpointing works correctly for monteswitch_mpi. Checks 1), 2) and 3) described in test_EC_1 should be 
performed on the 'state' file.

*****************************

test_EC_NPT_3

This test calculates the equilibrium quantities as described in test_EC_NPT_1, but uses multicanonical sampling,
with a weight function generated using the visited states method. Specifically, a weight function generation 
simulation is performed which consists of 10,000,000 sweeps. Then the 'state' file is altered in preparation 
for the production simulation. Then the production simulation is performed, which consists of 10,000,000 sweeps.

This test also outputs the weight function generated using the visited states method, as well as a histogram of 
the macrostates visited during the production simulation. These can be found in the files 'wf.dat' and 'M_hist.dat'
respectively. 

Checks to perform (beyond  1)-4) described in test_EC_NPT_1):
5) The macrostate histogram should be fairly flat - which reflects the fact that all macrostates are
   visted with equal probability in multicanonical sampling using an ideal weight function.






*************************************************************************************************************
The hcp and fcc phases of the Lennard-Jones solid (LJ_hcp_fcc)

A solid in which particles interact via a Lennard-Jones potential is a more realistic test for monteswitch.
Here we try to reproduce the results of 'Structural Phase Behaviour via Monte Carlo Techniques', Andrew N. Jackson,
PhD Thesis, University of Edinburgh, 2002. Specifically, we examine the hcp and fcc phases of the Lennard-Jones 
solid. 

The relevant 'interactions' file for these tests is 'interactions_LJ_hcp_fcc.f95'.


*****************************

test_LJ_hcp_fcc_1_MPI

This test calculates the free energy difference between hcp and fcc for a 216-particle supercell at P=0 and 
beta=10 in the NPT ensemble. 2 4-thread MPI simulations are used. The first generates the weight function using 'pong_down'
barrier dynamics over 500000 sweeps. The second simulation calculates the free energy difference. Note that
this simulation may take a while to run (12 hours using 4 threads?). The final result for the free energy difference
should match that in Andrew Jackson's thesis, Fig. 6.21, the data-point corresponding to kT=0.1, i.e.,
the free energy difference per particle should be -0.00055 (Note that Jackson defines the free energy difference as
that of fcc minus that of hcp, while in monteswitch, with hcp corresponding to lattice 1 and fcc corresponding to 
lattice 2, the free energy difference is defined as that of hcp minus that of fcc - hence the change of sign here
relative to Jackson's result). Hence in the test simulation the final extensive free energy difference should be -0.12.

Checks to perform:
1) The final free energy difference between the two systems should be -0.12. Check that this is the case for the 
   simulation: the free energy difference is stored in the 'equil_DeltaF' in the 'state' file, with its uncertainty 
   stored in the 'sigma_equil_DeltaF' variable.






*************************************************************************************************************
The hcp and fcc phases of the hard-sphere solid (penetrable_spheres)

The relevant 'interactions' file for this test is 'interactions_penetrable_spheres.f95'. We use this class of
interactions to treat hard-spheres, realised by setting epsilon=1.0E100. Here we also try to reproduce the
results of 'Structural Phase Behaviour via Monte Carlo Techniques', Andrew N. Jackson, PhD Thesis, University
of Edinburgh, 2002. Specifically we examine the hcp and fcc phases of the hard-sphere solid.


*****************************

test_penetrable_spheres_1 

This test calculates the free energy difference between hcp and fcc for a 216-particle supercell at 
P*beta*sigma^3=14.58, where beta denotes the thermodynamic beta and sigma denotes the hard sphere radius,
in the NPT ensemble. 2 4-thread MPI simulations are used. The first generates the weight function using 'pong_down'
barrier dynamics over 500000 sweeps. The second simulation calculates the free energy difference. Note that
this simulation may take a while to run. The final result for the free energy difference
should match that in Andrew Jackson's thesis, Table 4.4, i.e. the free energy difference per particle should be
0.00113(4)/beta. (Note that Jackson defines the free energy difference as that of fcc minus that of hcp, 
while in monteswitch, with hcp corresponding to lattice 1 and fcc corresponding to lattice 2, the free energy 
difference is defined as that of hcp minus that of fcc - hence the change of sign here
relative to Jackson's result). Hence in the test simulation the final extensive free energy difference should be 
0.244.

Checks to perform:
1) The final free energy difference between the two systems should be 0.244. Check that this is the case for the 
   simulation: the free energy difference is stored in the 'equil_DeltaF' in the 'state' file, with its uncertainty 
   stored in the 'sigma_equil_DeltaF' variable.


*************************************************************************************************************
The hcp and fcc phases of the hard-sphere solid (penetrable_spheres)

The relevant 'interactions' file for this test is 'interactions_penetrable_spheres.f95'. We use this class of
interactions to treat hard-spheres, realised by setting epsilon=1.0E100. Here we also try to reproduce the
results of 'Structural Phase Behaviour via Monte Carlo Techniques', Andrew N. Jackson, PhD Thesis, University
of Edinburgh, 2002. Specifically we examine the hcp and fcc phases of the hard-sphere solid.


*****************************

test_penetrable_spheres_1 

This test calculates the free energy difference between hcp and fcc for a 216-particle supercell at 
P*beta*sigma^3=14.58, where beta denotes the thermodynamic beta and sigma denotes the hard sphere radius,
in the NPT ensemble. 2 4-thread MPI simulations are used. The first generates the weight function using 'pong_down'
barrier dynamics over 500000 sweeps. The second simulation calculates the free energy difference. Note that
this simulation may take a while to run. The final result for the free energy difference
should match that in Andrew Jackson's thesis, Table 4.4, i.e. the free energy difference per particle should be
0.00113(4)/beta. (Note that Jackson defines the free energy difference as that of fcc minus that of hcp, 
while in monteswitch, with hcp corresponding to lattice 1 and fcc corresponding to lattice 2, the free energy 
difference is defined as that of hcp minus that of fcc - hence the change of sign here
relative to Jackson's result). Hence in the test simulation the final extensive free energy difference should be 
0.244.

Checks to perform:
1) The final free energy difference between the two systems should be 0.244. Check that this is the case for the 
   simulation: the free energy difference is stored in the 'equil_DeltaF' in the 'state' file, with its uncertainty 
   stored in the 'sigma_equil_DeltaF' variable.


*************************************************************************************************************
The hcp and fcc phases of the hard-sphere solid (penetrable_spheres)

The relevant 'interactions' file for this test is 'interactions_penetrable_spheres.f95'. We use this class of
interactions to treat hard-spheres, realised by setting epsilon=1.0E100. Here we also try to reproduce the
results of 'Structural Phase Behaviour via Monte Carlo Techniques', Andrew N. Jackson, PhD Thesis, University
of Edinburgh, 2002. Specifically we examine the hcp and fcc phases of the hard-sphere solid.


*****************************

test_penetrable_spheres_1 

This test calculates the free energy difference between hcp and fcc for a 216-particle supercell at 
P*beta*sigma^3=14.58, where beta denotes the thermodynamic beta and sigma denotes the hard sphere radius,
in the NPT ensemble. 2 4-thread MPI simulations are used. The first generates the weight function using 'pong_down'
barrier dynamics over 2000000 sweeps. The second simulation calculates the free energy difference - using
a total of 25000000 sweeps. Note that this simulation may take a while to run. The final result for the free energy difference
should match that in Andrew Jackson's thesis, Table 4.4, i.e. the free energy difference per particle should be
0.00113(4)/beta. (Note that Jackson defines the free energy difference as that of fcc minus that of hcp, 
while in monteswitch, with hcp corresponding to lattice 1 and fcc corresponding to lattice 2, the free energy 
difference is defined as that of hcp minus that of fcc - hence the change of sign here
relative to Jackson's result). Note that Jackson's result was obtained using ~250000000 sweeps, which is 10 x 
what is used in this simulation. Hence the final result obtained from this simulation will not have the same 
precision as Jackson's result.

Checks to perform:
1) The final free energy difference between the two systems, when divided by 216, should agree with 0.00113(4).
   Check that this is the case for the simulation: the free energy difference is stored in the 'equil_DeltaF'
   in the 'state' file, with its uncertainty stored in the 'sigma_equil_DeltaF' variable.



*************************************************************************************************************
The hcp and bcc phases of Zr (EAM)

The relevant 'interactions' file for this test is 'interactions_EAM.f95'. The test here is exactly the
same calculation as the worked example. See the chapter in the user manual pertaining to the worked example
for details.


*****************************

test_EAM_1 


Checks to perform:
1) The final free energy difference between the two systems should be 0. Check that this is the case for the 
   simulation: the free energy difference is stored in the 'equil_DeltaF' in the 'state' file, with its uncertainty 
   stored in the 'sigma_equil_DeltaF' variable.







*************************************************************************************************************
Tests for interactions files

The above tests are designed for the inner workings of monteswitch. The following test the various 'interactions'
files.


*****************************

test_LJ_shifted_1

This test calculates the difference in the ground state energies per particle between the fcc and hcp phases for
various densities, using a Lennard-Jones potential with sigma=2, epsilon=0.5, and a cut-off of 5.

Checks to perform:
1) The graph 'Ediff_vs_rho.dat' should exactly match the solid (but not bold) curve in Fig. 6.5 of 'Structural Phase 
Behaviour via Monte Carlo Techniques', Andrew N. Jackson, PhD Thesis, University of Edinburgh, 2002. 



*****************************

test_LJ_1

This test calculates the potential energy per particle of the Lennard-Jones fluid, with a cut-off (not shifted) of
3*sigma, epsilon=sigma=1, at a temperature of 0.85 and density of 0.003 (NVT). 

Checks to perform:
1) The aforementioned energy, with tail corrections, should match those of http://mmlapps.nist.gov/srs/LJ_PURE/mc.htm,
specifically, -0.03102(6).




